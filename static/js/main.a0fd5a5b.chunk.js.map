{"version":3,"sources":["assets/img/pizza-logo.svg","assets/img/pizza.png","assets/img/empty-cart.png","redux/reducers/pizzas.js","redux/reducers/filter.js","redux/reducers/cart.js","redux/store.js","components/Button.jsx","components/Category.jsx","components/Header.jsx","components/SortPopup.jsx","components/PizzaBlock.jsx","components/PizzaBlockPreloader.jsx","pages/Home.jsx","components/CartItem.jsx","pages/Cart.jsx","App.js","index.js"],"names":["module","exports","SET_LOADED","initialState","items","isLoaded","pizzasReducer","state","action","type","payload","setPizzas","category","order","dispatch","axios","get","then","response","data","SET_SORT","SET_CATEGORY","sort","filterReducer","ADD_PIZZA","PLUS_PIZZA","MINUS_PIZZA","DELETE_PIZZA","CLEAR_CART","totalCount","totalPrice","getTotalCount","oldItems","currentItems","id","acum","key","length","getTotalSum","price","cartReducer","newItem","newItems","slice","currentItemTotalCont","currentItemTotalPrice","rootReducer","combineReducers","pizzas","filter","cart","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Button","onClick","outline","className","children","cNames","Category","React","memo","activeCategory","onClickCategory","map","name","index","defaultProps","func","Header","useSelector","to","width","src","logo","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SortPopup","onClickSort","activeSort","useState","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","obj","outsideClick","e","path","composedPath","includes","current","useEffect","document","addEventListener","removeEventListener","ref","onSelecItem","PizzaBlock","addPizzaToCart","imageUrl","types","sizes","addedCount","availabelTypes","activeType","setActiveType","activeSize","setActiveSize","active","disabled","onSelectType","size","pizzaImg","PizzaBlockPreloader","props","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","sortIems","categories","Home","useDispatch","cartItems","onSelectCategory","useCallback","setCategoryBy","onSelectSort","setSortBy","addPizza","Array","_","CartItem","img","minusPizza","plusPizza","deletePizza","Cart","onClickMinusPizza","onClickPlusPizza","onClickDeletePizza","confirm","Object","keys","alert","console","log","symbol","emptyCart","App","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a0fd5a5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-logo.f3327011.svg\";","module.exports = __webpack_public_path__ + \"static/media/pizza.6a5172e0.png\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.ceb2faf0.png\";","//libraries\r\nimport axios from 'axios'\r\n\r\nconst SET_PIZZAS_SUCCESS = 'pizzasReducer/SET_PIZZAS_SUCCESS'\r\nconst SET_LOADED = 'pizzasReducer/SET_LOADED'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    isLoaded: false,\r\n}\r\n\r\nconst pizzasReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //Грузим пиццы в стейт\r\n        case SET_PIZZAS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoaded: true,\r\n            }\r\n\r\n        //Показываем preloader пока идет pending\r\n        case SET_LOADED:\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default pizzasReducer\r\n\r\n//actions\r\nconst setPizzasSuccess = (pizzas) => ({ type: SET_PIZZAS_SUCCESS, payload: pizzas })\r\nconst setLoaded = (value) => ({ type: SET_LOADED, payload: value })\r\n\r\n//thunks\r\nexport const setPizzas = (category, { type, order }) => (dispatch) => {\r\n    dispatch(setLoaded(false))\r\n    axios\r\n        .get(\r\n            `/pizzas?${\r\n                category !== null ? 'category=' + category : ''\r\n            }&_sort=${type}&_order=${order}`,\r\n        )\r\n        .then((response) => dispatch(setPizzasSuccess(response.data)))\r\n}\r\n","const SET_SORT = 'filterReducer/SET_SORT'\r\nconst SET_CATEGORY = 'filterReducer/SET_CATEGORY'\r\n\r\nconst initialState = {\r\n    sort: {\r\n        type: 'popular', //типы сортировки ... popular / price / name\r\n        order: 'desc', //порядок сортировки ... asc / desc\r\n    },\r\n    category: null, //текущая категория ... Мясные / Вегетарианская / Гриль / Острые / Закрытые\r\n}\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //Сортируем по типу и порядку\r\n        case SET_SORT:\r\n            return {\r\n                ...state,\r\n                sort: action.payload,\r\n            }\r\n\r\n        //Сортируем по категории\r\n        case SET_CATEGORY:\r\n            return {\r\n                ...state,\r\n                category: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default filterReducer\r\n\r\n//actions\r\nexport const setSortBy = ({ type, order }) => ({ type: SET_SORT, payload: { type, order } })\r\nexport const setCategoryBy = (category) => ({ type: SET_CATEGORY, payload: category })\r\n","const ADD_PIZZA = 'cartReducer/ADD_PIZZA'\r\nconst PLUS_PIZZA = 'cartReducer/PLUS_PIZZA'\r\nconst MINUS_PIZZA = 'cartReducer/MINUS_PIZZA'\r\nconst DELETE_PIZZA = 'cartReducer/DELETE_PIZZA'\r\nconst CLEAR_CART = 'cartReducer/CLEAR_CART'\r\n\r\nconst initialState = {\r\n    items: {}, //объект с купленными пиццами\r\n    totalCount: 0, //общее число купленных пицц\r\n    totalPrice: 0, //общая стоимость купленных пицц\r\n}\r\n\r\n//расчитываем общее кол-во пицц\r\nconst getTotalCount = (oldItems, currentItems, id) => {\r\n    let acum = 0\r\n    for (let key in oldItems) {\r\n        if (key !== id) {\r\n            acum += oldItems[key].items.length\r\n        }\r\n    }\r\n    return acum + currentItems.length\r\n}\r\n\r\n//расчитываем общую стоимость пицц\r\nconst getTotalSum = (oldItems, currentItems, id) => {\r\n    let acum = 0\r\n    for (let key in oldItems) {\r\n        if (key !== id) {\r\n            acum += oldItems[key].totalPrice\r\n        }\r\n    }\r\n    return acum + currentItems.length * currentItems[0].price\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //Добавляем пиццу в корзину\r\n        case ADD_PIZZA: {\r\n            const newItem = !state.items[action.payload.id] //если данной пиццы нет в корзине\r\n                ? [action.payload] //то создаем массив и ложим в него пиццу (obj)\r\n                : [...state.items[action.payload.id].items, action.payload] //получаем массив и ложим в конец пиццу (obj)\r\n\r\n            return {\r\n                ...state,\r\n                items: {\r\n                    ...state.items,\r\n                    [action.payload.id]: {\r\n                        items: newItem,\r\n                        totalPrice: newItem.length * action.payload.price,\r\n                        totalCount: newItem.length,\r\n                    },\r\n                },\r\n                totalCount: state.totalCount + 1, //увеличиваем кол-во купленных пицц на единицу\r\n                totalPrice: state.totalPrice + action.payload.price, //прибавляем стоимость купленной пиццы\r\n            }\r\n        }\r\n\r\n        //уменьшаяем кол-во пицц в корзине\r\n        case MINUS_PIZZA: {\r\n            const oldItems = state.items[action.id].items\r\n            const newItems = oldItems.length > 1 ? oldItems.slice(1) : oldItems\r\n\r\n            return {\r\n                ...state,\r\n                items: {\r\n                    ...state.items,\r\n                    [action.id]: {\r\n                        items: newItems,\r\n                        totalPrice: newItems.length * newItems[0].price,\r\n                        totalCount: newItems.length,\r\n                    },\r\n                },\r\n                totalCount: getTotalCount(state.items, newItems, action.id),\r\n                totalPrice: getTotalSum(state.items, newItems, action.id),\r\n            }\r\n        }\r\n\r\n        //увеличиваем кол-во пицц в корзине\r\n        case PLUS_PIZZA: {\r\n            const newItems = [...state.items[action.id].items, state.items[action.id].items[0]]\r\n\r\n            return {\r\n                ...state,\r\n                items: {\r\n                    ...state.items,\r\n                    [action.id]: {\r\n                        items: newItems,\r\n                        totalPrice: newItems.length * newItems[0].price,\r\n                        totalCount: newItems.length,\r\n                    },\r\n                },\r\n                totalCount: getTotalCount(state.items, newItems, action.id),\r\n                totalPrice: getTotalSum(state.items, newItems, action.id),\r\n            }\r\n        }\r\n\r\n        //удаление пиццы\r\n        case DELETE_PIZZA: {\r\n            const newItems = {\r\n                ...state.items,\r\n            }\r\n            const currentItemTotalCont = state.items[action.id].totalCount\r\n            const currentItemTotalPrice = state.items[action.id].totalPrice\r\n\r\n            delete newItems[action.id]\r\n\r\n            return {\r\n                ...state,\r\n                items: {\r\n                    ...newItems,\r\n                },\r\n                totalCount: state.totalCount - currentItemTotalCont,\r\n                totalPrice: state.totalPrice - currentItemTotalPrice,\r\n            }\r\n        }\r\n\r\n        //Очистка корзины\r\n        case CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                items: {},\r\n                totalCount: 0,\r\n                totalPrice: 0,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cartReducer\r\n\r\n//actions\r\nexport const addPizza = (obj) => ({ type: ADD_PIZZA, payload: obj })\r\nexport const deletePizza = (id) => ({ type: DELETE_PIZZA, id })\r\nexport const plusPizza = (id) => ({ type: PLUS_PIZZA, id })\r\nexport const minusPizza = (id) => ({ type: MINUS_PIZZA, id })\r\nexport const clearCart = () => ({ type: CLEAR_CART })\r\n","//libraries\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n//reducers\r\nimport pizzas from './reducers/pizzas'\r\nimport filter from './reducers/filter'\r\nimport cart from './reducers/cart'\r\n\r\nconst rootReducer = combineReducers({\r\n    pizzas,\r\n    filter,\r\n    cart,\r\n})\r\n\r\n// подключаем devtools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n//store глобально\r\nwindow.store = store\r\n\r\nexport default store\r\n","//libraries\r\nimport React from 'react'\r\nimport cNames from 'classnames'\r\nimport { array, bool, func, string } from 'prop-types'\r\n\r\nfunction Button({ onClick, outline, className, children }) {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={cNames('button', className, {\r\n                'button--outline': outline,\r\n            })}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\n//component settings\r\nButton.propTypes = {\r\n    onClick: func,\r\n    outline: bool,\r\n    className: string,\r\n    children: array,\r\n}\r\n\r\nexport default Button\r\n","// libraries\r\nimport React from 'react'\r\nimport { func, string, arrayOf } from 'prop-types'\r\n\r\nconst Category = React.memo(function Category({ activeCategory, items, onClickCategory }) {\r\n    return (\r\n        <div className=\"categories\">\r\n            <ul>\r\n                <li\r\n                    onClick={() => onClickCategory(null)}\r\n                    className={activeCategory === null ? 'active' : ''}>\r\n                    Все\r\n                </li>\r\n                {items &&\r\n                    items.map((name, index) => (\r\n                        <li\r\n                            key={name}\r\n                            onClick={() => onClickCategory(index)}\r\n                            className={activeCategory === index ? 'active' : ''}>\r\n                            {name}\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\n//component settings\r\nCategory.propTypes = {\r\n    items: arrayOf(string).isRequired,\r\n    onClickCategory: func,\r\n}\r\n\r\nCategory.defaultProps = {\r\n    activeCategory: null,\r\n    items: [],\r\n    onClickCategory: func,\r\n}\r\n\r\nexport default Category\r\n","//libraries\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n//components\r\nimport { Button } from './index'\r\n//img\r\nimport logo from '../assets/img/pizza-logo.svg'\r\n\r\nfunction Header() {\r\n    //global state\r\n    const { totalPrice, totalCount } = useSelector(({ cart }) => cart)\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <NavLink to=\"/\">\r\n                    <div className=\"header__logo\">\r\n                        <img width=\"38\" src={logo} alt=\"Pizza logo\" />\r\n\r\n                        <div>\r\n                            <h1>React Pizza Clone</h1>\r\n                            <p>самая вкусная пицца во вселенной</p>\r\n                        </div>\r\n                    </div>\r\n                </NavLink>\r\n                <div className=\"header__cart\">\r\n                    <NavLink to=\"/cart\">\r\n                        <Button className=\"button--cart\">\r\n                            <span>{totalPrice} ₽</span>\r\n                            <div className=\"button__delimiter\"></div>\r\n                            <svg\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 18 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\"\r\n                                    strokeWidth=\"1.8\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                            <span>{totalCount}</span>\r\n                        </Button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","//libraries\r\nimport React from 'react'\r\nimport { arrayOf, object, func, string } from 'prop-types'\r\n\r\nconst SortPopup = React.memo(function SortPopup({ items, onClickSort, activeSort }) {\r\n    //local state\r\n    const [visiblePopup, setVisiblePopup] = React.useState(false)\r\n    const sortRef = React.useRef()\r\n    const activeLabel = items.find((obj) => obj.type === activeSort).name\r\n\r\n    //hooks\r\n    React.useEffect(() => {\r\n        document.addEventListener('click', outsideClick)\r\n        return () => {\r\n            document.removeEventListener('click', outsideClick)\r\n        }\r\n    }, [])\r\n\r\n    //local functions\r\n    function outsideClick(e) {\r\n        const path = e.path || (e.composedPath && e.composedPath())\r\n        if (!path.includes(sortRef.current)) {\r\n            setVisiblePopup(false)\r\n        }\r\n    }\r\n\r\n    function toggleVisiblePopup() {\r\n        setVisiblePopup(!visiblePopup)\r\n    }\r\n\r\n    function onSelecItem(obj) {\r\n        if (onClickSort) {\r\n            onClickSort(obj)\r\n        }\r\n        setVisiblePopup(false)\r\n    }\r\n\r\n    return (\r\n        <div ref={sortRef} className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <svg\r\n                    className={visiblePopup ? 'rotated' : ''}\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span onClick={toggleVisiblePopup}>{activeLabel}</span>\r\n            </div>\r\n            {visiblePopup && (\r\n                <div className=\"sort__popup\">\r\n                    <ul>\r\n                        {items.map((obj) => (\r\n                            <li\r\n                                key={obj.name}\r\n                                onClick={() => onSelecItem(obj)}\r\n                                className={activeSort === obj.type ? 'active' : ''}>\r\n                                {obj.name}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n\r\n//component settings\r\nSortPopup.propTypes = {\r\n    items: arrayOf(object),\r\n    onClickSort: func,\r\n    activeSort: string,\r\n}\r\n\r\n//component settings\r\nSortPopup.defaultProps = {\r\n    items: [],\r\n    activeSort: 'popular',\r\n}\r\n\r\nexport default SortPopup\r\n","//libraries\r\nimport React from 'react'\r\nimport cNames from 'classnames'\r\nimport PropTypes, { number } from 'prop-types'\r\n//components\r\nimport pizzaImg from '../assets/img/pizza.png'\r\nimport Button from './Button'\r\n\r\nfunction PizzaBlock({ addPizzaToCart, id, name, imageUrl, types, sizes, price, addedCount }) {\r\n    //local settings\r\n    const availabelSizes = [26, 30, 40]\r\n    const availabelTypes = ['тонкое', 'традиционное']\r\n\r\n    //local state\r\n    const [activeType, setActiveType] = React.useState(types[0])\r\n    const [activeSize, setActiveSize] = React.useState(sizes[0])\r\n\r\n    //local functions\r\n    const onSelectType = (index) => {\r\n        setActiveType(index)\r\n    }\r\n\r\n    const onSelectSize = (index) => {\r\n        setActiveSize(index)\r\n    }\r\n\r\n    const handleOnClick = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            imageUrl,\r\n            price,\r\n            type: availabelTypes[activeType],\r\n            size: activeSize,\r\n        }\r\n        addPizzaToCart(obj)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img className=\"pizza-block__image\" src={imageUrl} alt={name} />\r\n            <h4 className=\"pizza-block__title\">{name}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {availabelTypes.map((type, index) => (\r\n                        <li\r\n                            className={cNames({\r\n                                active: activeType === index,\r\n                                disabled: !types.includes(index),\r\n                            })}\r\n                            key={index}\r\n                            onClick={() => onSelectType(index)}>\r\n                            {type}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul>\r\n                    {availabelSizes.map((size) => (\r\n                        <li\r\n                            key={size}\r\n                            onClick={() => onSelectSize(size)}\r\n                            className={cNames({\r\n                                active: activeSize === size,\r\n                                disabled: !sizes.includes(size),\r\n                            })}>\r\n                            {size} см.\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">от {price} ₽</div>\r\n                <Button onClick={handleOnClick} className=\"button--add\" outline>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    {addedCount && <i>{addedCount}</i>}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//component settings\r\nPizzaBlock.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    imageUrl: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(number),\r\n    sizes: PropTypes.arrayOf(number),\r\n    price: PropTypes.number.isRequired,\r\n}\r\n\r\nPizzaBlock.defaultProps = {\r\n    name: 'Пицца без названия',\r\n    imageUrl: pizzaImg,\r\n    types: [],\r\n    sizes: [],\r\n    price: 0,\r\n}\r\n\r\nexport default PizzaBlock\r\n","//libraries\r\nimport React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst PizzaBlockPreloader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={280}\r\n        height={457}\r\n        className=\"pizza-block\"\r\n        viewBox=\"0 0 280 457\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        {...props}>\r\n        <circle cx=\"140\" cy=\"140\" r=\"130\" />\r\n        <rect x=\"0\" y=\"283\" rx=\"6\" ry=\"6\" width=\"280\" height=\"30\" />\r\n        <rect x=\"1\" y=\"323\" rx=\"6\" ry=\"6\" width=\"280\" height=\"67\" />\r\n        <rect x=\"101\" y=\"397\" rx=\"20\" ry=\"20\" width=\"176\" height=\"59\" />\r\n        <rect x=\"6\" y=\"405\" rx=\"6\" ry=\"6\" width=\"84\" height=\"43\" />\r\n    </ContentLoader>\r\n)\r\n\r\nexport default PizzaBlockPreloader\r\n","//libraries\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n//components\r\nimport { Category, SortPopup } from '../components'\r\nimport PizzaBlock from '../components/PizzaBlock'\r\nimport PizzaBlockPreloader from '../components/PizzaBlockPreloader'\r\n//actions\r\nimport { setCategoryBy, setSortBy } from '../redux/reducers/filter'\r\nimport { setPizzas } from '../redux/reducers/pizzas'\r\nimport { addPizza } from '../redux/reducers/cart'\r\n\r\n//Component settings\r\nconst sortIems = [\r\n    { name: 'популярности', type: 'popular', order: 'desc' },\r\n    { name: 'цене', type: 'price', order: 'desc' },\r\n    { name: 'алфавит', type: 'name', order: 'asc' },\r\n]\r\n\r\nconst categories = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые']\r\n\r\nfunction Home() {\r\n    //global store\r\n    const dispatch = useDispatch()\r\n    const pizzas = useSelector(({ pizzas }) => pizzas.items)\r\n    const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded)\r\n    const cartItems = useSelector(({ cart }) => cart.items)\r\n    const { category, sort } = useSelector((state) => state.filter)\r\n\r\n    //hooks\r\n    React.useEffect(() => {\r\n        dispatch(setPizzas(category, sort))\r\n    }, [dispatch, category, sort])\r\n\r\n    //local functions\r\n    const onSelectCategory = React.useCallback(\r\n        (category) => {\r\n            dispatch(setCategoryBy(category))\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    const onSelectSort = React.useCallback(\r\n        (obj) => {\r\n            dispatch(setSortBy(obj))\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    const addPizzaToCart = (obj) => {\r\n        dispatch(addPizza(obj))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Category\r\n                    activeCategory={category}\r\n                    items={categories}\r\n                    onClickCategory={onSelectCategory}\r\n                />\r\n                <SortPopup activeSort={sort.type} items={sortIems} onClickSort={onSelectSort} />\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            <div className=\"content__items\">\r\n                {isLoaded\r\n                    ? pizzas.map((items) => (\r\n                          <PizzaBlock\r\n                              key={items.id}\r\n                              {...items}\r\n                              addPizzaToCart={addPizzaToCart}\r\n                              addedCount={cartItems[items.id] && cartItems[items.id].items.length}\r\n                          />\r\n                      ))\r\n                    : Array(10)\r\n                          .fill(0)\r\n                          .map((_, index) => <PizzaBlockPreloader key={index} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","//libraries\r\nimport React from 'react'\r\n//components\r\nimport Button from './Button'\r\n\r\nfunction CartItem({\r\n    id,\r\n    name,\r\n    img,\r\n    type,\r\n    size,\r\n    totalCount,\r\n    totalPrice,\r\n    minusPizza,\r\n    plusPizza,\r\n    deletePizza,\r\n}) {\r\n    const handelPlusItem = () => {\r\n        plusPizza(id)\r\n    }\r\n\r\n    const handelMinusItem = () => {\r\n        minusPizza(id)\r\n    }\r\n\r\n    const handelDeleteItem = () => {\r\n        deletePizza(id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart__item\">\r\n            <div className=\"cart__item-img\">\r\n                <img className=\"pizza-block__image\" src={img} alt={name} />\r\n            </div>\r\n            <div className=\"cart__item-info\">\r\n                <h3>{name}</h3>\r\n                <p>{`${type}, ${size} см.`}</p>\r\n            </div>\r\n            <div className=\"cart__item-count\">\r\n                <Button\r\n                    onClick={handelMinusItem}\r\n                    className=\"button--circle cart__item-count-minus\"\r\n                    outline>\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </Button>\r\n                <b>{totalCount}</b>\r\n                <Button\r\n                    onClick={handelPlusItem}\r\n                    className=\"button--circle cart__item-count-plus\"\r\n                    outline>\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </Button>\r\n            </div>\r\n            <div className=\"cart__item-price\">\r\n                <b>{totalPrice} ₽</b>\r\n            </div>\r\n            <div className=\"cart__item-remove\">\r\n                <Button onClick={handelDeleteItem} className=\"button--circle\" outline>\r\n                    <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                        <path\r\n                            d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                            fill=\"#EB5A1E\"\r\n                        />\r\n                    </svg>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","// libraries\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n//components\r\nimport CartItem from '../components/CartItem'\r\n//actions\r\nimport { clearCart, deletePizza, minusPizza, plusPizza } from '../redux/reducers/cart'\r\n//img\r\nimport emptyCart from '../assets/img/empty-cart.png'\r\nimport Emoji from 'a11y-react-emoji'\r\n\r\nfunction Cart() {\r\n    //global state\r\n    const dispatch = useDispatch()\r\n    const { items, totalCount, totalPrice } = useSelector(({ cart }) => cart)\r\n\r\n    //local function\r\n    const onClickMinusPizza = (id) => {\r\n        dispatch(minusPizza(id))\r\n    }\r\n\r\n    const onClickPlusPizza = (id) => {\r\n        dispatch(plusPizza(id))\r\n    }\r\n\r\n    const onClickDeletePizza = (id) => {\r\n        if (window.confirm('Вы действительно хотите удалить пиццу?')) {\r\n            dispatch(deletePizza(id))\r\n        }\r\n    }\r\n\r\n    const onClickClearCart = () => {\r\n        if (window.confirm('Вы действительно хотите очистить корзину?')) {\r\n            dispatch(clearCart())\r\n        }\r\n    }\r\n\r\n    const onClickOrder = () => {\r\n        if (window.confirm('Продолжить оформление заказа?')) {\r\n            window.alert('Ваш заказ принят! Спасибо за покупку!')\r\n            console.log(items)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            {totalCount ? (\r\n                <div className=\"container container--cart\">\r\n                    <div className=\"cart\">\r\n                        <div className=\"cart__top\">\r\n                            <h2 className=\"content__title\">\r\n                                <svg\r\n                                    width=\"18\"\r\n                                    height=\"18\"\r\n                                    viewBox=\"0 0 18 18\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                        stroke=\"white\"\r\n                                        strokeWidth=\"1.8\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                        stroke=\"white\"\r\n                                        strokeWidth=\"1.8\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                        stroke=\"white\"\r\n                                        strokeWidth=\"1.8\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                                Корзина\r\n                            </h2>\r\n                            <div onClick={onClickClearCart} className=\"cart__clear\">\r\n                                <svg\r\n                                    width=\"20\"\r\n                                    height=\"20\"\r\n                                    viewBox=\"0 0 20 20\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.5 5H4.16667H17.5\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M8.33337 9.16667V14.1667\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M11.6666 9.16667V14.1667\"\r\n                                        stroke=\"#B6B6B6\"\r\n                                        strokeWidth=\"1.2\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n\r\n                                <span>Очистить корзину</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content__items\">\r\n                            {Object.keys(items).map(\r\n                                (id) =>\r\n                                    items[id] && (\r\n                                        <CartItem\r\n                                            key={id}\r\n                                            id={id}\r\n                                            name={items[id].items[0].name}\r\n                                            img={items[id].items[0].imageUrl}\r\n                                            type={items[id].items[0].type}\r\n                                            size={items[id].items[0].size}\r\n                                            totalCount={items[id].totalCount}\r\n                                            totalPrice={items[id].totalPrice}\r\n                                            minusPizza={onClickMinusPizza}\r\n                                            plusPizza={onClickPlusPizza}\r\n                                            deletePizza={onClickDeletePizza}\r\n                                        />\r\n                                    ),\r\n                            )}\r\n                        </div>\r\n                        <div className=\"cart__bottom\">\r\n                            <div className=\"cart__bottom-details\">\r\n                                <span>\r\n                                    {' '}\r\n                                    Всего пицц: <b>{totalCount} шт.</b>{' '}\r\n                                </span>\r\n                                <span>\r\n                                    {' '}\r\n                                    Сумма заказа: <b>{totalPrice} ₽</b>{' '}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"cart__bottom-buttons\">\r\n                                <Link\r\n                                    to=\"/\"\r\n                                    className=\"button button--outline button--add go-back-btn\">\r\n                                    <svg\r\n                                        width=\"8\"\r\n                                        height=\"14\"\r\n                                        viewBox=\"0 0 8 14\"\r\n                                        fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path\r\n                                            d=\"M7 13L1 6.93015L6.86175 1\"\r\n                                            stroke=\"#D3D3D3\"\r\n                                            strokeWidth=\"1.5\"\r\n                                            strokeLinecap=\"round\"\r\n                                            strokeLinejoin=\"round\"\r\n                                        />\r\n                                    </svg>\r\n\r\n                                    <span>Вернуться назад</span>\r\n                                </Link>\r\n                                <div onClick={onClickOrder} className=\"button pay-btn\">\r\n                                    <span>Оплатить сейчас</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"container container--cart\">\r\n                    <div className=\"cart cart--empty\">\r\n                        <h2>\r\n                            Корзина пустая <Emoji symbol=\"😕\" />\r\n                        </h2>\r\n                        <p>\r\n                            Вероятней всего, вы не заказывали ещё пиццу.\r\n                            <br />\r\n                            Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n                        </p>\r\n                        <img src={emptyCart} alt=\"Empty cart\" />\r\n                        <Link to=\"/\" className=\"button button--black\">\r\n                            <span>Вернуться назад</span>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","// libraries\nimport React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n// components\nimport { Header } from './components/index'\nimport { Home, Cart } from './pages/index'\n\nfunction App() {\n  return (\t  \n\t\t<div className=\"wrapper\">\n\t\t\t<Header />\n\t\t\t<div className=\"content\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/cart\" component={Cart} />\t\n\t\t\t\t</Switch>\t\t\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n \t )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nimport './scss/app.scss'\n\nimport App from './App'\n\nReactDOM.render( \n\t<BrowserRouter>\t\n\t\t<Provider store={store}>\n\t\t\t<App />\t\n\t\t</Provider>\n\t</BrowserRouter>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}